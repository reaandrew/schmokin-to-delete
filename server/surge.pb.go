// Code generated by protoc-gen-go. DO NOT EDIT.
// source: surge.proto

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SurgeRequest struct {
	Lines                []string `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
	Random               bool     `protobuf:"varint,2,opt,name=random,proto3" json:"random,omitempty"`
	WorkerCount          int32    `protobuf:"varint,3,opt,name=workerCount,proto3" json:"workerCount,omitempty"`
	Iterations           int32    `protobuf:"varint,4,opt,name=iterations,proto3" json:"iterations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SurgeRequest) Reset()         { *m = SurgeRequest{} }
func (m *SurgeRequest) String() string { return proto.CompactTextString(m) }
func (*SurgeRequest) ProtoMessage()    {}
func (*SurgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8d979c7c21201bc, []int{0}
}

func (m *SurgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SurgeRequest.Unmarshal(m, b)
}
func (m *SurgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SurgeRequest.Marshal(b, m, deterministic)
}
func (m *SurgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SurgeRequest.Merge(m, src)
}
func (m *SurgeRequest) XXX_Size() int {
	return xxx_messageInfo_SurgeRequest.Size(m)
}
func (m *SurgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SurgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SurgeRequest proto.InternalMessageInfo

func (m *SurgeRequest) GetLines() []string {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *SurgeRequest) GetRandom() bool {
	if m != nil {
		return m.Random
	}
	return false
}

func (m *SurgeRequest) GetWorkerCount() int32 {
	if m != nil {
		return m.WorkerCount
	}
	return 0
}

func (m *SurgeRequest) GetIterations() int32 {
	if m != nil {
		return m.Iterations
	}
	return 0
}

type SurgeResponse struct {
	Transactions           int32    `protobuf:"varint,1,opt,name=Transactions,proto3" json:"Transactions,omitempty"`
	Availability           float64  `protobuf:"fixed64,2,opt,name=Availability,proto3" json:"Availability,omitempty"`
	ElapsedTime            int64    `protobuf:"varint,3,opt,name=ElapsedTime,proto3" json:"ElapsedTime,omitempty"`
	AverageResponseTime    float64  `protobuf:"fixed64,4,opt,name=AverageResponseTime,proto3" json:"AverageResponseTime,omitempty"`
	TotalBytesSent         int32    `protobuf:"varint,5,opt,name=TotalBytesSent,proto3" json:"TotalBytesSent,omitempty"`
	TotalBytesReceived     int32    `protobuf:"varint,6,opt,name=TotalBytesReceived,proto3" json:"TotalBytesReceived,omitempty"`
	TransactionRate        float64  `protobuf:"fixed64,7,opt,name=TransactionRate,proto3" json:"TransactionRate,omitempty"`
	ConcurrencyRate        float64  `protobuf:"fixed64,8,opt,name=ConcurrencyRate,proto3" json:"ConcurrencyRate,omitempty"`
	DataSendRate           float64  `protobuf:"fixed64,9,opt,name=DataSendRate,proto3" json:"DataSendRate,omitempty"`
	DataReceiveRate        float64  `protobuf:"fixed64,10,opt,name=DataReceiveRate,proto3" json:"DataReceiveRate,omitempty"`
	SuccessfulTransactions int64    `protobuf:"varint,11,opt,name=SuccessfulTransactions,proto3" json:"SuccessfulTransactions,omitempty"`
	FailedTransactions     int64    `protobuf:"varint,12,opt,name=FailedTransactions,proto3" json:"FailedTransactions,omitempty"`
	LongestTransaction     int64    `protobuf:"varint,13,opt,name=LongestTransaction,proto3" json:"LongestTransaction,omitempty"`
	ShortestTransaction    int64    `protobuf:"varint,14,opt,name=ShortestTransaction,proto3" json:"ShortestTransaction,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *SurgeResponse) Reset()         { *m = SurgeResponse{} }
func (m *SurgeResponse) String() string { return proto.CompactTextString(m) }
func (*SurgeResponse) ProtoMessage()    {}
func (*SurgeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8d979c7c21201bc, []int{1}
}

func (m *SurgeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SurgeResponse.Unmarshal(m, b)
}
func (m *SurgeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SurgeResponse.Marshal(b, m, deterministic)
}
func (m *SurgeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SurgeResponse.Merge(m, src)
}
func (m *SurgeResponse) XXX_Size() int {
	return xxx_messageInfo_SurgeResponse.Size(m)
}
func (m *SurgeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SurgeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SurgeResponse proto.InternalMessageInfo

func (m *SurgeResponse) GetTransactions() int32 {
	if m != nil {
		return m.Transactions
	}
	return 0
}

func (m *SurgeResponse) GetAvailability() float64 {
	if m != nil {
		return m.Availability
	}
	return 0
}

func (m *SurgeResponse) GetElapsedTime() int64 {
	if m != nil {
		return m.ElapsedTime
	}
	return 0
}

func (m *SurgeResponse) GetAverageResponseTime() float64 {
	if m != nil {
		return m.AverageResponseTime
	}
	return 0
}

func (m *SurgeResponse) GetTotalBytesSent() int32 {
	if m != nil {
		return m.TotalBytesSent
	}
	return 0
}

func (m *SurgeResponse) GetTotalBytesReceived() int32 {
	if m != nil {
		return m.TotalBytesReceived
	}
	return 0
}

func (m *SurgeResponse) GetTransactionRate() float64 {
	if m != nil {
		return m.TransactionRate
	}
	return 0
}

func (m *SurgeResponse) GetConcurrencyRate() float64 {
	if m != nil {
		return m.ConcurrencyRate
	}
	return 0
}

func (m *SurgeResponse) GetDataSendRate() float64 {
	if m != nil {
		return m.DataSendRate
	}
	return 0
}

func (m *SurgeResponse) GetDataReceiveRate() float64 {
	if m != nil {
		return m.DataReceiveRate
	}
	return 0
}

func (m *SurgeResponse) GetSuccessfulTransactions() int64 {
	if m != nil {
		return m.SuccessfulTransactions
	}
	return 0
}

func (m *SurgeResponse) GetFailedTransactions() int64 {
	if m != nil {
		return m.FailedTransactions
	}
	return 0
}

func (m *SurgeResponse) GetLongestTransaction() int64 {
	if m != nil {
		return m.LongestTransaction
	}
	return 0
}

func (m *SurgeResponse) GetShortestTransaction() int64 {
	if m != nil {
		return m.ShortestTransaction
	}
	return 0
}

func init() {
	proto.RegisterType((*SurgeRequest)(nil), "server.SurgeRequest")
	proto.RegisterType((*SurgeResponse)(nil), "server.SurgeResponse")
}

func init() { proto.RegisterFile("surge.proto", fileDescriptor_e8d979c7c21201bc) }

var fileDescriptor_e8d979c7c21201bc = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0x41, 0x6f, 0xd4, 0x30,
	0x10, 0x85, 0x15, 0xb2, 0x1b, 0xda, 0xd9, 0x6d, 0x91, 0x4c, 0xa9, 0x2c, 0x0e, 0x28, 0xda, 0x03,
	0xca, 0x29, 0x42, 0x45, 0xe2, 0xde, 0x16, 0x38, 0x71, 0x72, 0xf6, 0x0f, 0xb8, 0xc9, 0x50, 0x2c,
	0x52, 0x7b, 0xb1, 0x9d, 0xa0, 0xbd, 0xf0, 0x97, 0xf9, 0x0b, 0xc8, 0xe3, 0x48, 0x9b, 0x84, 0xf4,
	0xe8, 0xef, 0xbd, 0xe7, 0xbc, 0x8c, 0x6d, 0xd8, 0xb8, 0xce, 0x3e, 0x62, 0x79, 0xb0, 0xc6, 0x1b,
	0x96, 0x39, 0xb4, 0x3d, 0xda, 0xdd, 0x1f, 0xd8, 0x56, 0x01, 0x0b, 0xfc, 0xd5, 0xa1, 0xf3, 0xec,
	0x0a, 0xd6, 0xad, 0xd2, 0xe8, 0x78, 0x92, 0xa7, 0xc5, 0xb9, 0x88, 0x0b, 0x76, 0x0d, 0x99, 0x95,
	0xba, 0x31, 0x4f, 0xfc, 0x45, 0x9e, 0x14, 0x67, 0x62, 0x58, 0xb1, 0x1c, 0x36, 0xbf, 0x8d, 0xfd,
	0x89, 0xf6, 0xde, 0x74, 0xda, 0xf3, 0x34, 0x4f, 0x8a, 0xb5, 0x18, 0x23, 0xf6, 0x0e, 0x40, 0x79,
	0xb4, 0xd2, 0x2b, 0xa3, 0x1d, 0x5f, 0x91, 0x61, 0x44, 0x76, 0x7f, 0x57, 0x70, 0x31, 0x14, 0x70,
	0x07, 0xa3, 0x1d, 0xb2, 0x1d, 0x6c, 0xf7, 0x56, 0x6a, 0x27, 0xeb, 0x98, 0x49, 0x28, 0x33, 0x61,
	0xc1, 0x73, 0xdb, 0x4b, 0xd5, 0xca, 0x07, 0xd5, 0x2a, 0x7f, 0xa4, 0x56, 0x89, 0x98, 0xb0, 0xd0,
	0xed, 0x4b, 0x2b, 0x0f, 0x0e, 0x9b, 0xbd, 0x7a, 0x42, 0xea, 0x96, 0x8a, 0x31, 0x62, 0x1f, 0xe0,
	0xf5, 0x6d, 0x8f, 0x56, 0x9e, 0x3e, 0x4e, 0xce, 0x15, 0x6d, 0xb6, 0x24, 0xb1, 0xf7, 0x70, 0xb9,
	0x37, 0x5e, 0xb6, 0x77, 0x47, 0x8f, 0xae, 0x42, 0xed, 0xf9, 0x9a, 0xda, 0xcd, 0x28, 0x2b, 0x81,
	0x9d, 0x88, 0xc0, 0x1a, 0x55, 0x8f, 0x0d, 0xcf, 0xc8, 0xbb, 0xa0, 0xb0, 0x02, 0x5e, 0x8d, 0xfe,
	0x4f, 0x48, 0x8f, 0xfc, 0x25, 0xb5, 0x98, 0xe3, 0xe0, 0xbc, 0x37, 0xba, 0xee, 0xac, 0x45, 0x5d,
	0x1f, 0xc9, 0x79, 0x16, 0x9d, 0x33, 0x1c, 0x66, 0xf4, 0x59, 0x7a, 0x59, 0xa1, 0x6e, 0xc8, 0x76,
	0x1e, 0x67, 0x34, 0x66, 0x61, 0xb7, 0xb0, 0x1e, 0x7a, 0x90, 0x0d, 0xe2, 0x6e, 0x33, 0xcc, 0x3e,
	0xc1, 0x75, 0xd5, 0xd5, 0x35, 0x3a, 0xf7, 0xbd, 0x6b, 0x27, 0xe7, 0xb3, 0xa1, 0xc1, 0x3e, 0xa3,
	0x86, 0x49, 0x7c, 0x95, 0xaa, 0xc5, 0x66, 0x92, 0xd9, 0x52, 0x66, 0x41, 0x09, 0xfe, 0x6f, 0x46,
	0x3f, 0xa2, 0xf3, 0x23, 0xcc, 0x2f, 0xa2, 0xff, 0x7f, 0x25, 0x9c, 0x61, 0xf5, 0xc3, 0x58, 0x3f,
	0x0b, 0x5c, 0x52, 0x60, 0x49, 0xba, 0xb9, 0x1b, 0x6e, 0x7c, 0x85, 0xb6, 0x57, 0x35, 0xb2, 0x1b,
	0x48, 0x45, 0xa7, 0xd9, 0x55, 0x19, 0x5f, 0x44, 0x39, 0x7e, 0x0e, 0x6f, 0xdf, 0xcc, 0x68, 0xbc,
	0x0b, 0x0f, 0x19, 0x3d, 0xa2, 0x8f, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x87, 0x74, 0x5d,
	0x53, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SurgeServiceClient is the client API for SurgeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SurgeServiceClient interface {
	Run(ctx context.Context, in *SurgeRequest, opts ...grpc.CallOption) (*SurgeResponse, error)
}

type surgeServiceClient struct {
	cc *grpc.ClientConn
}

func NewSurgeServiceClient(cc *grpc.ClientConn) SurgeServiceClient {
	return &surgeServiceClient{cc}
}

func (c *surgeServiceClient) Run(ctx context.Context, in *SurgeRequest, opts ...grpc.CallOption) (*SurgeResponse, error) {
	out := new(SurgeResponse)
	err := c.cc.Invoke(ctx, "/server.SurgeService/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SurgeServiceServer is the server API for SurgeService service.
type SurgeServiceServer interface {
	Run(context.Context, *SurgeRequest) (*SurgeResponse, error)
}

// UnimplementedSurgeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSurgeServiceServer struct {
}

func (*UnimplementedSurgeServiceServer) Run(ctx context.Context, req *SurgeRequest) (*SurgeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}

func RegisterSurgeServiceServer(s *grpc.Server, srv SurgeServiceServer) {
	s.RegisterService(&_SurgeService_serviceDesc, srv)
}

func _SurgeService_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SurgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurgeServiceServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.SurgeService/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurgeServiceServer).Run(ctx, req.(*SurgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SurgeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.SurgeService",
	HandlerType: (*SurgeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _SurgeService_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "surge.proto",
}
